/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 11 20:10:10 PDT 2016
 */

package atm.transaction;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.net.Inet4Address;
import java.net.InetAddress;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.Test;
import org.junit.runner.RunWith;

import atm.ATM;
import atm.Session;
import banking.Card;
import banking.Message;
import banking.Receipt;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Inquiry_ESTest extends Inquiry_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName("Last transaction was cancelled");
      ATM aTM0 = new ATM((-3254), "Last transaction was cancelled", "Last transaction was cancelled", (InetAddress) inet4Address0);
      Session session0 = aTM0.getCurrentSession();
      Card card0 = new Card(3919);
      Inquiry inquiry0 = new Inquiry(aTM0, session0, card0, 3919);
      //  // Unstable assertion: assertEquals(76, inquiry0.getSerialNumber());
      
      inquiry0.serialNumber = 0;
      Message message0 = inquiry0.getSpecificsFromCustomer();
      //  // Unstable assertion: assertEquals(4, message0.getMessageCode());
  }

  @Test
  public void test1()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName("Last transaction was cancelled");
      ATM aTM0 = new ATM((-3254), "Last transaction was cancelled", "Last transaction was cancelled", (InetAddress) inet4Address0);
      Session session0 = aTM0.getCurrentSession();
      Card card0 = new Card(3919);
      Inquiry inquiry0 = new Inquiry(aTM0, session0, card0, 3919);
      //  // Unstable assertion: assertEquals(52, inquiry0.getSerialNumber());
      
      inquiry0.serialNumber = (-10);
      Message message0 = inquiry0.getSpecificsFromCustomer();
      //  // Unstable assertion: assertEquals(4, message0.getMessageCode());
  }

  @Test
  public void test2()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName("Last transaction was cancelled");
      ATM aTM0 = new ATM((-3254), "Last transaction was cancelled", "Last transaction was cancelled", (InetAddress) inet4Address0);
      Card card0 = new Card(3919);
      Inquiry inquiry0 = new Inquiry(aTM0, (Session) null, card0, 0);
      Message message0 = inquiry0.getSpecificsFromCustomer();
      //  // Unstable assertion: assertEquals(28, message0.getSerialNumber());
  }

  @Test
  public void test3()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getLoopbackAddress();
      ATM aTM0 = new ATM((-955), " TO: ", " TO: ", (InetAddress) inet4Address0);
      Card card0 = new Card((-955));
      Inquiry inquiry0 = new Inquiry(aTM0, (Session) null, card0, (-955));
      Message message0 = inquiry0.getSpecificsFromCustomer();
      //  // Unstable assertion: assertEquals(4, message0.getSerialNumber());
  }

  @Test
  public void test4()  throws Throwable  {
      Session session0 = new Session((ATM) null);
      Card card0 = new Card(1677);
      Inquiry inquiry0 = new Inquiry((ATM) null, session0, card0, 1677);
      // Undeclared exception!
      try { 
        inquiry0.getSpecificsFromCustomer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.transaction.Inquiry", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Session session0 = new Session((ATM) null);
      Card card0 = new Card(1677);
      Inquiry inquiry0 = new Inquiry((ATM) null, session0, card0, 1677);
      // Undeclared exception!
      try { 
        inquiry0.completeTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Receipt", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName("Last transaction was cancelled");
      ATM aTM0 = new ATM((-3254), "Last transaction was cancelled", "Last transaction was cancelled", (InetAddress) inet4Address0);
      Card card0 = new Card(3919);
      Inquiry inquiry0 = new Inquiry(aTM0, (Session) null, card0, 3128);
      Receipt receipt0 = inquiry0.completeTransaction();
      assertNotNull(receipt0);
  }
}
