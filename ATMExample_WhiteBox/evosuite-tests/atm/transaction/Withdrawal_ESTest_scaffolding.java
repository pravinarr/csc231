/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 11 20:30:21 PDT 2016
 */

package atm.transaction;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

@EvoSuiteClassExclude
public class Withdrawal_ESTest_scaffolding {

  @org.junit.Rule 
  public org.junit.rules.Timeout globalTimeout = new org.junit.rules.Timeout(4000); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);

  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "atm.transaction.Withdrawal"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Withdrawal_ESTest_scaffolding.class.getClassLoader() ,
      "atm.transaction.Withdrawal$1",
      "atm.physical.CardReader",
      "banking.Message",
      "banking.Money",
      "atm.transaction.Transaction",
      "atm.physical.Log",
      "atm.transaction.Transaction$CardRetained",
      "atm.transaction.Withdrawal",
      "banking.Balances",
      "atm.ATM",
      "atm.transaction.Inquiry",
      "atm.physical.CashDispenser",
      "atm.physical.OperatorPanel",
      "atm.physical.EnvelopeAcceptor",
      "atm.physical.ReceiptPrinter",
      "atm.transaction.Deposit",
      "atm.physical.CustomerConsole",
      "atm.Session",
      "banking.Status",
      "atm.transaction.Transfer",
      "atm.physical.NetworkToBank$1",
      "atm.physical.CustomerConsole$Cancelled",
      "banking.Receipt",
      "atm.physical.NetworkToBank",
      "banking.Card"
    );
  } 
}
