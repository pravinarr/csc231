/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 11 20:30:21 PDT 2016
 */

package atm.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import atm.ATM;
import atm.Session;
import atm.transaction.Withdrawal;
import banking.Card;
import banking.Money;
import java.net.Inet4Address;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(useVNET = true)
public class Withdrawal_ESTest extends Withdrawal_ESTest_scaffolding {

	@Test
	public void test00() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getByName((String) null);
		ATM aTM0 = new ATM(989, "NpMI", "NpMI", (InetAddress) inet4Address0);
		Card card0 = new Card(989);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, 989);
		withdrawal0.setMoneyOption(989);
		int int0 = withdrawal0.getMoneyOption();
		// // Unstable assertion: assertEquals(300,
		// withdrawal0.getSerialNumber());
		// // Unstable assertion: assertEquals(989, int0);
	}

	@Test
	public void test01() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM((-2249), "", "Deposit", (InetAddress) inet4Address0);
		Card card0 = new Card((-2249));
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, (-2249));
		withdrawal0.setMoneyOption((-2249));
		int int0 = withdrawal0.getMoneyOption();
		// // Unstable assertion: assertEquals(289,
		// withdrawal0.getSerialNumber());
		// // Unstable assertion: assertEquals((-2249), int0);
	}

	@Test
	public void test02() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM((-2249), "", "Deposit", (InetAddress) inet4Address0);
		Card card0 = new Card((-2249));
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, (-2249));
		withdrawal0.setFrom((-2249));
		int int0 = withdrawal0.getFrom();
		// // Unstable assertion: assertEquals(278,
		// withdrawal0.getSerialNumber());
		// // Unstable assertion: assertEquals((-2249), int0);
	}

	@Test
	public void test03() throws Throwable {
		Session session0 = new Session((ATM) null);
		Card card0 = new Card((-3483));
		Withdrawal withdrawal0 = new Withdrawal((ATM) null, session0, card0, 357);
		withdrawal0.setMoneyOption((-5590));
		// Undeclared exception!
		try {
			withdrawal0.getSpecificsFromCustomer();
			fail("Expecting exception: ArrayIndexOutOfBoundsException");

		} catch (ArrayIndexOutOfBoundsException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}


	@Test
	public void test05() throws Throwable {
		Session session0 = new Session((ATM) null);
		Card card0 = new Card((-3483));
		Withdrawal withdrawal0 = new Withdrawal((ATM) null, session0, card0, 357);
		// Undeclared exception!
		try {
			withdrawal0.getSpecificsFromCustomer();
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
		}
	}

	@Test
	public void test06() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getByName((String) null);
		ATM aTM0 = new ATM(989, "NpMI", "NpMI", (InetAddress) inet4Address0);
		Card card0 = new Card(989);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, 989);
		int int0 = withdrawal0.getMoneyOption();
		// // Unstable assertion: assertEquals(21,
		// withdrawal0.getSerialNumber());
		// // Unstable assertion: assertEquals(0, int0);
	}

	@Test
	public void test08() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM(3001, "", "", (InetAddress) inet4Address0);
		Session session0 = new Session(aTM0);
		Card card0 = new Card(20);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, session0, card0, (-531));
		withdrawal0.setAmount((Money) null);
		assertEquals(0, withdrawal0.getMoneyOption());
	}

	@Test
	public void test09() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM(3001, "", "", (InetAddress) inet4Address0);
		Session session0 = new Session(aTM0);
		Card card0 = new Card(20);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, session0, card0, (-531));
		Money money0 = withdrawal0.getAmount();
		assertNull(money0);
	}

	@Test
	public void test10() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM(3001, "", "", (InetAddress) inet4Address0);
		Session session0 = new Session(aTM0);
		Card card0 = new Card(20);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, session0, card0, (-531));
		withdrawal0.setFrom(1442);
		int int0 = withdrawal0.getFrom();
		assertEquals(1442, int0);
	}

	@Test
	public void test11() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getLoopbackAddress();
		ATM aTM0 = new ATM(3001, "", "", (InetAddress) inet4Address0);
		Session session0 = new Session(aTM0);
		Card card0 = new Card(20);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, session0, card0, (-531));
		int int0 = withdrawal0.getFrom();
		// // Unstable assertion: assertEquals(1,
		// withdrawal0.getSerialNumber());
		// // Unstable assertion: assertEquals(0, int0);
	}

	// Modified to increase the coverage
	@Test
	public void test07() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getByName((String) null);
		ATM aTM0 = new ATM(989, "NpMI", "NpMI", (InetAddress) inet4Address0);
		Card card0 = new Card(989);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, 989);
		withdrawal0.setAmount(new Money(10));
		// Undeclared exception!
		withdrawal0.completeTransaction();
		assertNotNull(withdrawal0);

	}

	@Test
	public void test07_a() throws Throwable {
		Inet4Address inet4Address0 = (Inet4Address) MockInetAddress.getByName((String) null);
		ATM aTM0 = new ATM(989, "NpMI", "NpMI", (InetAddress) inet4Address0);
		Card card0 = new Card(989);
		Withdrawal withdrawal0 = new Withdrawal(aTM0, (Session) null, card0, 989);
		withdrawal0.setMoneyOption(3);
		;
		// Undeclared exception!
		withdrawal0.getSpecificsFromCustomer();
		assertNotNull(withdrawal0);
	}
}
